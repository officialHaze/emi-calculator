import Head from "next/head";
import { Poppins } from "next/font/google";
import styles from "@/styles/Home.module.css";
import LoanForm from "@/components/LoanForm";
import { useState, useEffect } from "react";
import { calculateEMI } from "@/utils/calculateEMI";
import EmiInfo from "@/components/EmiInfo";
import BackArrow from "@/components/BackArrow";
import { calculateTotalPayables } from "@/utils/calculateTotalPayables";

const poppins = Poppins({ weight: ["400", "600"], subsets: ["latin"] });

interface FormData {
	loan: string;
	down: string;
	tenure: string;
	interest: string;
}

interface RevisedFormData {
	loan: number;
	down: number;
	tenure: number;
	interest: number;
}

export default function Home() {
	const [flip, setFlip] = useState(false);
	const [formData, setFormData] = useState<FormData | null>(null);
	const [emi, setEmi] = useState<string | null>(null);
	const [totalPayables, setTotalPayables] = useState({
		totalAmount: "",
		totalPrincipal: "",
		totalInterest: "",
	});

	const flipTheApp = () => {
		setFlip(true);
	};

	const handleClick = () => {
		setFlip(false);
	};

	//converting form data into integers and calculationg emi
	useEffect(() => {
		if (formData) {
			const revisedFormData: RevisedFormData = {
				loan: parseInt(formData.loan),
				down: parseInt(formData.down),
				tenure: parseInt(formData.tenure),
				interest: parseFloat(formData.interest),
			};
			const emi: string = calculateEMI(revisedFormData);
			const totalPayables = calculateTotalPayables(
				parseFloat(emi),
				revisedFormData.tenure,
				revisedFormData.loan,
				revisedFormData.down,
			);
			setEmi(emi); //setting the value of the result as emi
			setTotalPayables({
				totalAmount: totalPayables.totalPayableAmount,
				totalPrincipal: totalPayables.totalPrincipal,
				totalInterest: totalPayables.totalPayableInterest,
			});
		}
	}, [formData]);

	return (
		<>
			<Head>
				<title>EMI Calculator</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link
					rel="icon"
					href="/favicon.ico"
				/>
			</Head>
			<main className={`${styles.main} ${poppins.className}`}>
				<div
					className={styles.app_container}
					style={{ transform: flip ? "rotateY(180deg)" : "none" }}>
					<div className={styles.app}>
						{emi && <BackArrow flip={flipTheApp} />}

						<div style={{ padding: !emi ? "5rem 1.5rem" : "0.5rem 1.5rem 4rem" }}>
							<h2 style={{ fontWeight: "400" }}>Loan EMI</h2>
							<h1>Calculator</h1>
							<hr className={styles.hr} />
						</div>

						<LoanForm
							poppins={poppins}
							flip={flipTheApp}
							formData={setFormData}
						/>
					</div>
					{emi && totalPayables && (
						<EmiInfo
							handleClick={handleClick}
							emiValue={emi}
							payables={totalPayables}
						/>
					)}
				</div>
			</main>
		</>
	);
}
